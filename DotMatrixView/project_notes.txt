Project notes
=============

NEXT: Make an alternative version where the animations kick off as soon as the dim/light decision is made for that dot.

Figure out how what your experimental direction should be now. Options:
 	Go further with the display piece
 		Improve the animation
 			Kick off dots as they are categorised
 			Try 3.0-style property animations
 		Build up the segmented display to the same functionality
 			Can set a number
 			Animates to the set number
 			Build segments using a PathDrawable instead of images
 			Build segment animations using lists instead (flip-pad animation)
 		Build dot-array digit from code not XML
 			Construct the arrangement of views in code
 			Given the width and height, figure out which are the active dots
 			Build a single array of dots for all the digits in the display, then let
 			each digit construct itself by figuring out which dots it should own.
 	Figure out the time piece
 		How will update of the display be scheduled to happen
 			When the activity is visible
 			When in the background? Should there be a background service at all?
 	Build some UI
 		Connect time display with buttons to set the ending time.
 			Might you show both the ending time and the count-down on the screen together?
 	Learn to get appointment times from the calendar content provider
 
 Idea: you could build something in code that is conceptually similar to a real LCD using FrameLayout
 Top of stack:		Shape drawable rectangle whose colour is black and of variable transparency
 					Image file that is a black square with a transparent circle in the middle
 Bottom of stack:	A shape drawable rectangle of whatever colour you want the display to show when lit.
 
 You don't really need the top item above, because you can make the same adjustments at the bottom layer.
 You could use a different mask image to change the shape of the dots, e.g. use snow-flakes around Christmas
 		
 		

The alpha transition makes the spots disappear right down to the background.
	Change it to not go all the way down to zero - it might look passable.
	Make a 3.0-style property animation that takes the colour down to the dim colour.
	Do the shadow properties work on shape drawables?
	
Learn how to target multiple SDK levels so I can optionally use view or property animation.

Make the digits build in code with arbitrary sizes:
	build the original matrices
	build the co-ordinates of the digit parts, spacers and colon
	arguments for building a matrix:
		dots wide
		dots high
		dot size
		spacer width
	
	Should this actually just construct a matrix big enough for the full display, with the
	digits being indexes to items within it?
	
Try building a ShapeDrawable using a Path. The point of the experiment is to see if you can
change the fill colour of such a drawable dynamically, and if so, if the colour can be the
subject of a property animation.
		
	
An eight - all elements on - looks like this:
	    1, 2, 3, 4, 5,
	 7,               13,
	14,               20,
	21,               27,
	28,               34,
	35,               41,
	   43,44,45,46,47,
	49,               55,
	56,               62,
	63,               69,
	70,               76,
	77,               83,
	   85,86,87,88,89